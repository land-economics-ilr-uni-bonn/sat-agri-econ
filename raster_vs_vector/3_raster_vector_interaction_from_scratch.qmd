---
title: "3_raster_vector_interaction_from_scratch"
format: html
editor: visual
---

# Load packages

```{r}
library(pacman)
```

```{r}
p_load(
  exactextractr,
  sf,
  terra,
  leaflet,
  tmap,
  mapview,
  tictoc,
  tidyverse,
  install = TRUE
)
```

# Data

## Raster data

```{r}
list.files("data/processed")
```


```{r}
tmax <- rast("data/processed/tmax_2020_perPixelMean.tif")
```

```{r}
tmax
```
```{r}
tm_shape(tmax) +
  tm_raster(n = 7, style = "fisher")
```

```{r}
# Read "yield_rst_resampled.tif"
yield <- rast("data/processed/yield_rst_resampled.tif")
```

```{r}
yield
```




## Vector data

```{r}
# geopackage
points_sf <- st_read("data/processed/points_sf.gpkg")
```

```{r}
## read 
countries_sf <- st_read("data/processed/countries_sf.gpkg")
```

```{r}
tm_shape(tmax) +
  tm_raster(n = 7, style = "fisher")
```



```{r}
tm_shape(tmax) +
  tm_raster(n = 7, style = "fisher") +
  tm_shape(points_sf) +
  tm_dots()
```



# Raster extraction to points

```{r}
# |> ## Ctrl + Shift + M
```

```{r}
nrow(points_sf)
```


```{r}
set.seed(42)
points_sf_smpl <- points_sf |> sample_n(1000)
```

```{r}
# points_sf_smpl <- sample_n(points_sf, 1000)
```



```{r}
dim(points_sf_smpl)
```

```{r}
names(points_sf_smpl)
```

```{r}
class(points_sf_smpl)
```

```{r}
hist(points_sf_smpl$treecover2015) 
```

```{r}
## terra::extract

tic()
extr_points_tmax <- terra::extract(
  tmax,
  points_sf_smpl,
  method = "simple",
  bind = TRUE
)
toc()
```
```{r}
class(extr_points_tmax)
```


```{r}
extr_points_tmax <- st_as_sf(extr_points_tmax)
```

```{r}
class(extr_points_tmax)
```

```{r}
class(terra::vect(extr_points_tmax))
```





```{r}
head(extr_points_tmax)
```

```{r}
points_sf_smpl <- points_sf_smpl |> mutate(
  tmax = extr_points_tmax$mean
)
```

```{r}
points_sf_smpl <- points_sf_smpl |> bind_cols(extr_points_tmax)
```

```{r}
points_sf_smpl$tmax <- extr_points_tmax$mean
```

```{r}
head(extr_points_tmax)
```


# Raster extraction to polygons

```{r}
# yield data
yield
```

```{r}
# country boundaries
countries_sf
```

```{r}
mean(c(10,10,10,NA), na.rm = T)
```
```{r}
names(yield) <- "yield"
```

```{r}
yield_stack <- c(yield, yield*10)
```

```{r}
names(yield_stack) <- c("donald", "trump")
```



```{r}
# Extract mean yield in each country

extr_polygons_yield <- terra::extract(
  yield_stack,
  countries_sf,
  fun = "mean", na.rm = TRUE,
  bind = T
)

```

```{r}
extr_polygons_yield
```

```{r}
tm_shape(yield) +
  tm_raster() +
  tm_shape(countries_sf) +
  tm_borders()
```

```{r}
tm_shape(st_as_sf(extr_polygons_yield)) +
  tm_polygons("yield")
```

```{r}
# with exactextractr::exact_extract


extr_polygons_yield_withExactextract <- 
  exactextractr::exact_extract(
    yield,
    countries_sf,
    weights = 'area',
    fun = c('mean', 'weighted_mean'),
    force_df = TRUE,
    append_cols = colnames(countries_sf),
    full_colnames = T
  )
```

```{r}

```

```{r}

```

```{r}

```

```{r}
```

```{r}
```

```{r}
```

```{r}
```

```{r}
```

# Cropping raster with polygon


```{r}
germany_vec <- countries_sf |> filter(NAME == "Germany")

# germany_vec <- countries_sf[countries_sf$NAME == "Germany", ]
```



```{r}
plot(st_geometry(germany_vec))
```


```{r}
cropped1 <- terra::crop(tmax, germany_vec)
```

```{r}
cropped2 <- terra::crop(tmax, germany_vec, mask = T)

```



```{r}
tm_shape(cropped1) +
  tm_raster() +
  tm_shape(germany_vec) +
  tm_borders()
```

```{r}
tm_shape(cropped2) +
  tm_raster()
```


```{r}
# Convert terra SpatRaster object to raster Raster* object
as(.., "Raster")
```


```{r}
# The other way around

rast()

```


```{r}
cropped2_yield <- terra::crop(yield, germany_vec, mask = T)
```

```{r}
temp <- c(cropped2, cropped2_yield)
```

```{r}
names(temp) <- c("tmax", "yield")
```

```{r}
temp_rasterlib <- raster::stack(
  as(cropped2, "Raster"), 
  as(cropped2_yield, "Raster")
)
```



```{r}
temp_df <- raster::rasterToPoints(
  as(temp, "Raster")
)
```


```{r}
ggplot(temp_df, aes(x = tmax, y = yield)) +
  geom_point() +
  geom_smooth()
```

```{r}
ggplot(st_as_sf(germany_vec)) +
  geom_sf(aes(fill = "NAME"))
```

```{r}
ggplot(st_transform(st_as_sf(germany_vec), "epsg:3857")) +
  geom_sf(aes(fill = "NAME"))
```


```{r}
nrow(temp_df)
```


```{r}
temp_df
```

```{r}

```

# Reclassify values

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

# Whole raster to table (points)

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```
